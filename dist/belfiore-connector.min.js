!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.belfioreConnector=t():e.belfioreConnector=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){e.exports=class{constructor({activeDate:e,codeMatcher:t,province:r}={}){if(t&&r)throw new Error("Both codeMatcher and province were provided to Bolfiore, only one is allowed");const n=e=>({value:e,enumerable:!1,configurable:!1,writable:!1});return Object.defineProperties(this,{_activeDate:n(e),_codeMatcher:n(t),_province:n(r)}),new Proxy(this,this.constructor)}async toArray(){return[]}async searchByName(e,t=0){if(null!==e&&!["string","undefined"].includes(typeof e))throw new Error("Missing or invalid provided name, it must be a string, null or undefined");if("number"!=typeof t)throw new Error("Invalid provided limit, must be a number");if(t<0)throw new Error("Invalid provided limit, must be equal or greater than 0");if(!e){const e=await this.toArray();return t?e.slice(0,t):e}return[]}async findByName(e){return this.searchByName(e,1)[0]}config(){const e={};return Object.getOwnPropertyNames(this).filter(e=>/^_[a-z]+/.test(e)&&"function"!=typeof this[e]).map(e=>({[e.match(/^_(.+)$/i)[1]]:this[e]})).forEach(t=>Object.assign(e,t)),e}active(e=new Date){const t=this.config();return t.activeDate=e,new this.constructor(t)}byProvince(e){if("string"!=typeof e||!/^[A-Z]{2}$/u.test(e))return;const t=this.config();return t.province=e,new this.constructor(t)}get cities(){const e=this.config();return e.codeMatcher=/^[A-Y]/u,new this.constructor(e)}get countries(){const e=this.config();return e.codeMatcher=/^Z/u,new this.constructor(e)}async getByCode(e){if(!e||"string"!=typeof e)throw new Error("Missing or invalid provided code")}static get(e,t){return"string"==typeof t&&/^[A-Z]\d{3}$/u.test(t)?e.getByCode.apply(e,[t]):(e._codeMatcher||e._province)&&["cities","countries"].includes(t)||"byProvince"===t&&(e._codeMatcher instanceof RegExp&&e._codeMatcher.test("Z000")||/^[A-Z]{2}$/iu.test(e._province))?void 0:e[t]}}}])});